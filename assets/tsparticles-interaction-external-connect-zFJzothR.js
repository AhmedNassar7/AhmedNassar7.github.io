import{w as k,u as g,x as f,y as M,E as x,i as R}from"./tsparticles-engine-B56Pkamw.js";class b{constructor(){this.opacity=.5}load(t){t&&t.opacity!==void 0&&(this.opacity=t.opacity)}}class m{constructor(){this.distance=80,this.links=new b,this.radius=60}get lineLinked(){return this.links}set lineLinked(t){this.links=t}get line_linked(){return this.links}set line_linked(t){this.links=t}load(t){t&&(t.distance!==void 0&&(this.distance=t.distance),this.links.load(t.links??t.lineLinked??t.line_linked),t.radius!==void 0&&(this.radius=t.radius))}}function C(a,t,n,i){const o=a.actualOptions.interactivity.modes.connect;if(o)return function(u,s,e,c){const d=Math.floor(e.getRadius()/s.getRadius()),r=s.getFillColor(),l=e.getFillColor();if(!r||!l)return;const h=s.getPosition(),y=e.getPosition(),v=g(r,l,s.getRadius(),e.getRadius()),p=u.createLinearGradient(h.x,h.y,y.x,y.y);return p.addColorStop(0,f(r,c)),p.addColorStop(d>1?1:d,M(v,c)),p.addColorStop(1,f(l,c)),p}(t,n,i,o.links.opacity)}function w(a,t,n){a.canvas.draw(i=>{const o=C(a,i,t,n);if(!o)return;const u=t.getPosition(),s=n.getPosition();(function(e,c,d,r,l){k(e,r,l),e.lineWidth=c,e.strokeStyle=d,e.stroke()})(i,t.retina.linksWidth??0,o,u,s)})}class P extends x{constructor(t){super(t)}clear(){}init(){const t=this.container,n=t.actualOptions.interactivity.modes.connect;n&&(t.retina.connectModeDistance=n.distance*t.retina.pixelRatio,t.retina.connectModeRadius=n.radius*t.retina.pixelRatio)}async interact(){const t=this.container;if(t.actualOptions.interactivity.events.onHover.enable&&t.interactivity.status==="pointermove"){const n=t.interactivity.mouse.position;if(!t.retina.connectModeDistance||t.retina.connectModeDistance<0||!t.retina.connectModeRadius||t.retina.connectModeRadius<0||!n)return;const i=Math.abs(t.retina.connectModeRadius),o=t.particles.quadTree.queryCircle(n,i,s=>this.isEnabled(s));let u=0;for(const s of o){const e=s.getPosition();for(const c of o.slice(u+1)){const d=c.getPosition(),r=Math.abs(t.retina.connectModeDistance),l=Math.abs(e.x-d.x),h=Math.abs(e.y-d.y);l<r&&h<r&&w(t,s,c)}++u}}}isEnabled(t){const n=this.container,i=n.interactivity.mouse,o=((t==null?void 0:t.interactivity)??n.actualOptions.interactivity).events;return!(!o.onHover.enable||!i.position)&&R("connect",o.onHover.mode)}loadModeOptions(t,...n){t.connect||(t.connect=new m);for(const i of n)t.connect.load(i==null?void 0:i.connect)}reset(){}}async function D(a,t=!0){await a.addInteractor("externalConnect",n=>new P(n),t)}export{D as l};
