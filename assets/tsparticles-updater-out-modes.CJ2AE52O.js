import{X as t,e as i,g as o,Y as e,V as n,I as s,S as a}from"./tsparticles-engine.CajW4cSt.js";class r{constructor(t){this.container=t,this.modes=["bounce","bounce-vertical","bounce-horizontal","bounceVertical","bounceHorizontal","split"]}update(o,e,n,s){if(!this.modes.includes(s))return;const a=this.container;let r=!1;for(const[,t]of a.plugins)if(void 0!==t.particleBounce&&(r=t.particleBounce(o,n,e)),r)break;if(r)return;const c=o.getPosition(),d=o.offset,u=o.getRadius(),p=i(c,u),l=a.canvas.size;!function(i){if("bounce"!==i.outMode&&"bounce-horizontal"!==i.outMode&&"bounceHorizontal"!==i.outMode&&"split"!==i.outMode||"left"!==i.direction&&"right"!==i.direction)return;i.bounds.right<0&&"left"===i.direction?i.particle.position.x=i.size+i.offset.x:i.bounds.left>i.canvasSize.width&&"right"===i.direction&&(i.particle.position.x=i.canvasSize.width-i.size-i.offset.x);const o=i.particle.velocity.x;let e=!1;if("right"===i.direction&&i.bounds.right>=i.canvasSize.width&&o>0||"left"===i.direction&&i.bounds.left<=0&&o<0){const o=t(i.particle.options.bounce.horizontal);i.particle.velocity.x*=-o,e=!0}if(!e)return;const n=i.offset.x+i.size;i.bounds.right>=i.canvasSize.width&&"right"===i.direction?i.particle.position.x=i.canvasSize.width-n:i.bounds.left<=0&&"left"===i.direction&&(i.particle.position.x=n),"split"===i.outMode&&i.particle.destroy()}({particle:o,outMode:s,direction:e,bounds:p,canvasSize:l,offset:d,size:u}),function(i){if("bounce"!==i.outMode&&"bounce-vertical"!==i.outMode&&"bounceVertical"!==i.outMode&&"split"!==i.outMode||"bottom"!==i.direction&&"top"!==i.direction)return;i.bounds.bottom<0&&"top"===i.direction?i.particle.position.y=i.size+i.offset.y:i.bounds.top>i.canvasSize.height&&"bottom"===i.direction&&(i.particle.position.y=i.canvasSize.height-i.size-i.offset.y);const o=i.particle.velocity.y;let e=!1;if("bottom"===i.direction&&i.bounds.bottom>=i.canvasSize.height&&o>0||"top"===i.direction&&i.bounds.top<=0&&o<0){const o=t(i.particle.options.bounce.vertical);i.particle.velocity.y*=-o,e=!0}if(!e)return;const n=i.offset.y+i.size;i.bounds.bottom>=i.canvasSize.height&&"bottom"===i.direction?i.particle.position.y=i.canvasSize.height-n:i.bounds.top<=0&&"top"===i.direction&&(i.particle.position.y=n),"split"===i.outMode&&i.particle.destroy()}({particle:o,outMode:s,direction:e,bounds:p,canvasSize:l,offset:d,size:u})}}class c{constructor(t){this.container=t,this.modes=["destroy"]}update(t,i,s,a){if(!this.modes.includes(a))return;const r=this.container;switch(t.outType){case"normal":case"outside":if(e(t.position,r.canvas.size,n.origin,t.getRadius(),i))return;break;case"inside":{const{dx:i,dy:e}=o(t.position,t.moveCenter),{x:n,y:s}=t.velocity;if(n<0&&i>t.moveCenter.radius||s<0&&e>t.moveCenter.radius||n>=0&&i<-t.moveCenter.radius||s>=0&&e<-t.moveCenter.radius)return;break}}r.particles.remove(t,void 0,!0)}}class d{constructor(t){this.container=t,this.modes=["none"]}update(t,i,o,s){if(!this.modes.includes(s))return;if(t.options.move.distance.horizontal&&("left"===i||"right"===i)||t.options.move.distance.vertical&&("top"===i||"bottom"===i))return;const a=t.options.move.gravity,r=this.container,c=r.canvas.size,d=t.getRadius();if(a.enable){const o=t.position;(!a.inverse&&o.y>c.height+d&&"bottom"===i||a.inverse&&o.y<-d&&"top"===i)&&r.particles.remove(t)}else{if(t.velocity.y>0&&t.position.y<=c.height+d||t.velocity.y<0&&t.position.y>=-d||t.velocity.x>0&&t.position.x<=c.width+d||t.velocity.x<0&&t.position.x>=-d)return;e(t.position,r.canvas.size,n.origin,d,i)||r.particles.remove(t)}}}class u{constructor(t){this.container=t,this.modes=["out"]}update(t,r,c,d){if(!this.modes.includes(d))return;const u=this.container;switch(t.outType){case"inside":{const{x:i,y:e}=t.velocity,s=n.origin;s.length=t.moveCenter.radius,s.angle=t.velocity.angle+Math.PI,s.addTo(n.create(t.moveCenter));const{dx:r,dy:c}=o(t.position,s);if(i<=0&&r>=0||e<=0&&c>=0||i>=0&&r<=0||e>=0&&c<=0)return;t.position.x=Math.floor(a({min:0,max:u.canvas.size.width})),t.position.y=Math.floor(a({min:0,max:u.canvas.size.height}));const{dx:d,dy:p}=o(t.position,t.moveCenter);t.direction=Math.atan2(-p,-d),t.velocity.angle=t.direction;break}default:if(e(t.position,u.canvas.size,n.origin,t.getRadius(),r))return;switch(t.outType){case"outside":{t.position.x=Math.floor(a({min:-t.moveCenter.radius,max:t.moveCenter.radius}))+t.moveCenter.x,t.position.y=Math.floor(a({min:-t.moveCenter.radius,max:t.moveCenter.radius}))+t.moveCenter.y;const{dx:i,dy:e}=o(t.position,t.moveCenter);t.moveCenter.radius&&(t.direction=Math.atan2(e,i),t.velocity.angle=t.direction);break}case"normal":{const o=t.options.move.warp,e=u.canvas.size,n={bottom:e.height+t.getRadius()+t.offset.y,left:-t.getRadius()-t.offset.x,right:e.width+t.getRadius()+t.offset.x,top:-t.getRadius()-t.offset.y},a=t.getRadius(),c=i(t.position,a);"right"===r&&c.left>e.width+t.offset.x?(t.position.x=n.left,t.initialPosition.x=t.position.x,o||(t.position.y=s()*e.height,t.initialPosition.y=t.position.y)):"left"===r&&c.right<-t.offset.x&&(t.position.x=n.right,t.initialPosition.x=t.position.x,o||(t.position.y=s()*e.height,t.initialPosition.y=t.position.y)),"bottom"===r&&c.top>e.height+t.offset.y?(o||(t.position.x=s()*e.width,t.initialPosition.x=t.position.x),t.position.y=n.top,t.initialPosition.y=t.position.y):"top"===r&&c.bottom<-t.offset.y&&(o||(t.position.x=s()*e.width,t.initialPosition.x=t.position.x),t.position.y=n.bottom,t.initialPosition.y=t.position.y);break}}}}}class p{constructor(t){this.container=t,this._updateOutMode=(t,i,o,e)=>{for(const n of this.updaters)n.update(t,e,i,o)},this.updaters=[new r(t),new c(t),new u(t),new d(t)]}init(){}isEnabled(t){return!t.destroyed&&!t.spawning}update(t,i){const o=t.options.move.outModes;this._updateOutMode(t,i,o.bottom??o.default,"bottom"),this._updateOutMode(t,i,o.left??o.default,"left"),this._updateOutMode(t,i,o.right??o.default,"right"),this._updateOutMode(t,i,o.top??o.default,"top")}}async function l(t,i=!0){await t.addParticleUpdater("outModes",(t=>new p(t)),i)}export{l};
