import{S as v,q as p,T as y}from"./tsparticles-engine.pEwhNYWv.js";function o(t,i,n,s,f){if(!i||!n.enable||(i.maxLoops??0)>0&&(i.loops??0)>(i.maxLoops??0)||(i.time||(i.time=0),(i.delayTime??0)>0&&i.time<(i.delayTime??0)&&(i.time+=t.value),(i.delayTime??0)>0&&i.time<(i.delayTime??0)))return;const e=v(n.offset),d=(i.velocity??0)*t.factor+e*3.6,a=i.decay??1;!f||i.status==="increasing"?(i.value+=d,i.value>s&&(i.loops||(i.loops=0),i.loops++,f&&(i.status="decreasing",i.value-=i.value%s))):(i.value-=d,i.value<0&&(i.loops||(i.loops=0),i.loops++,i.status="increasing",i.value+=i.value)),i.velocity&&a!==1&&(i.velocity*=a),i.value>s&&(i.value%=s)}function h(t,i){const{h:n,s,l:f}=t.options.color.animation,{color:e}=t;if(!e)return;const{h:d,s:a,l:m}=e;d&&o(i,d,n,360,!1),a&&o(i,a,s,100,!0),m&&o(i,m,f,100,!0)}class g{constructor(i){this.container=i}init(i){const n=p(i.options.color,i.id,i.options.reduceDuplicates);n&&(i.color=y(n,i.options.color.animation,this.container.retina.reduceFactor))}isEnabled(i){const{h:n,s,l:f}=i.options.color.animation,{color:e}=i;return!i.destroyed&&!i.spawning&&(e?.h.value!==void 0&&n.enable||e?.s.value!==void 0&&s.enable||e?.l.value!==void 0&&f.enable)}update(i,n){h(i,n)}}async function C(t,i=!0){await t.addParticleUpdater("color",n=>new g(n),i)}export{C as l};
