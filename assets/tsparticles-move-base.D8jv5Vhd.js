import{g as r,I as h,c as m,l as b,D as f,n as M}from"./tsparticles-engine.pEwhNYWv.js";function z(n){const o=n.initialPosition,{dx:i,dy:s}=r(o,n.position),e=Math.abs(i),t=Math.abs(s),{maxDistance:a}=n.retina,c=a.horizontal,v=a.vertical;if(!(!c&&!v)){if((c&&e>=c||v&&t>=v)&&!n.misplaced)n.misplaced=!!c&&e>c||!!v&&t>v,c&&(n.velocity.x=n.velocity.y/2-n.velocity.x),v&&(n.velocity.y=n.velocity.x/2-n.velocity.y);else if((!c||e<c)&&(!v||t<v)&&n.misplaced)n.misplaced=!1;else if(n.misplaced){const y=n.position,d=n.velocity;c&&(y.x<o.x&&d.x<0||y.x>o.x&&d.x>0)&&(d.x*=-h()),v&&(y.y<o.y&&d.y<0||y.y>o.y&&d.y>0)&&(d.y*=-h())}}}function l(n,o,i,s,e,t){D(n,t);const a=n.gravity,c=a?.enable&&a.inverse?-1:1;e&&i&&(n.velocity.x+=e*t.factor/(60*i)),a?.enable&&i&&(n.velocity.y+=c*(a.acceleration*t.factor)/(60*i));const v=n.moveDecay;n.velocity.multTo(v);const y=n.velocity.mult(i);a?.enable&&s>0&&(!a.inverse&&y.y>=0&&y.y>=s||a.inverse&&y.y<=0&&y.y<=-s)&&(y.y=c*s,i&&(n.velocity.y=y.y/i));const d=n.options.zIndex,u=(1-n.zIndexFactor)**d.velocityRate;y.multTo(u);const{position:x}=n;x.addTo(y),o.vibrate&&(x.x+=Math.sin(x.x*Math.cos(x.y)),x.y+=Math.cos(x.y*Math.sin(x.x)))}function w(n,o){const i=n.container;if(!n.spin)return;const s={x:n.spin.direction==="clockwise"?Math.cos:Math.sin,y:n.spin.direction==="clockwise"?Math.sin:Math.cos};n.position.x=n.spin.center.x+n.spin.radius*s.x(n.spin.angle),n.position.y=n.spin.center.y+n.spin.radius*s.y(n.spin.angle),n.spin.radius+=n.spin.acceleration;const e=Math.max(i.canvas.size.width,i.canvas.size.height);n.spin.radius>e/2?(n.spin.radius=e/2,n.spin.acceleration*=-1):n.spin.radius<0&&(n.spin.radius=0,n.spin.acceleration*=-1),n.spin.angle+=o/100*(1-n.spin.radius/e)}function D(n,o){const i=n.options,s=i.move.path;if(!s.enable)return;if(n.lastPathTime<=n.pathDelay){n.lastPathTime+=o.value;return}const t=n.pathGenerator?.generate(n,o);t&&n.velocity.addTo(t),s.clamp&&(n.velocity.x=m(n.velocity.x,-1,1),n.velocity.y=m(n.velocity.y,-1,1)),n.lastPathTime-=n.pathDelay}function F(n){return n.slow.inRange?n.slow.factor:1}const P=2;class R{constructor(){this._initSpin=o=>{const i=o.container,s=o.options,e=s.move.spin;if(!e.enable)return;const t=e.position??{x:50,y:50},a={x:t.x/100*i.canvas.size.width,y:t.y/100*i.canvas.size.height},c=o.getPosition(),v=b(c,a),y=f(e.acceleration);o.retina.spinAcceleration=y*i.retina.pixelRatio,o.spin={center:a,direction:o.velocity.x>=0?"clockwise":"counter-clockwise",angle:o.velocity.angle,radius:v,acceleration:o.retina.spinAcceleration}}}init(o){const i=o.options,s=i.move.gravity;o.gravity={enable:s.enable,acceleration:f(s.acceleration),inverse:s.inverse},this._initSpin(o)}isEnabled(o){return!o.destroyed&&o.options.move.enable}move(o,i){const s=o.options,e=s.move;if(!e.enable)return;const t=o.container,a=t.retina.pixelRatio,c=F(o),v=(o.retina.moveSpeed??=f(e.speed)*a)*t.retina.reduceFactor,y=o.retina.moveDrift??=f(o.options.move.drift)*a,d=M(s.size.value)*a,u=e.size?o.getRadius()/d:1,x=v*u*c*(i.factor||1)/P,g=o.retina.maxSpeed??t.retina.maxSpeed;e.spin.enable?w(o,x):l(o,e,x,g,y,i),z(o)}}async function T(n,o=!0){await n.addMover("base",()=>new R,o)}export{T as l};
