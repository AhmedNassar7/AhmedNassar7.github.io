import{O as g,w as y,y as h,E as v,m,l as L,z as w,A as O,i as C}from"./tsparticles-engine.pEwhNYWv.js";class G{constructor(){this.blink=!1,this.consent=!1,this.opacity=1}load(i){i&&(i.blink!==void 0&&(this.blink=i.blink),i.color!==void 0&&(this.color=g.create(this.color,i.color)),i.consent!==void 0&&(this.consent=i.consent),i.opacity!==void 0&&(this.opacity=i.opacity))}}class E{constructor(){this.distance=100,this.links=new G}get lineLinked(){return this.links}set lineLinked(i){this.links=i}get line_linked(){return this.links}set line_linked(i){this.links=i}load(i){i&&(i.distance!==void 0&&(this.distance=i.distance),this.links.load(i.links??i.lineLinked??i.line_linked))}}function D(t,i,n,e,o,s){y(t,n,e),t.strokeStyle=h(o,s),t.lineWidth=i,t.stroke()}function I(t,i,n,e,o){t.canvas.draw(s=>{const a=i.getPosition();D(s,i.retina.linksWidth??0,a,o,n,e)})}class M extends v{constructor(i){super(i)}clear(){}init(){const i=this.container,n=i.actualOptions.interactivity.modes.grab;n&&(i.retina.grabModeDistance=n.distance*i.retina.pixelRatio)}async interact(){const i=this.container,n=i.actualOptions,e=n.interactivity;if(!e.modes.grab||!e.events.onHover.enable||i.interactivity.status!==m)return;const o=i.interactivity.mouse.position;if(!o)return;const s=i.retina.grabModeDistance;if(!s||s<0)return;const a=i.particles.quadTree.queryCircle(o,s,r=>this.isEnabled(r));for(const r of a){const p=r.getPosition(),c=L(p,o);if(c>s)continue;const l=e.modes.grab.links,u=l.opacity,d=u-c*u/s;if(d<=0)continue;const b=l.color??r.options.links?.color;if(!i.particles.grabLineColor&&b){const k=e.modes.grab.links;i.particles.grabLineColor=w(b,k.blink,k.consent)}const f=O(r,void 0,i.particles.grabLineColor);f&&I(i,r,f,d,o)}}isEnabled(i){const n=this.container,e=n.interactivity.mouse,o=(i?.interactivity??n.actualOptions.interactivity).events;return o.onHover.enable&&!!e.position&&C("grab",o.onHover.mode)}loadModeOptions(i,...n){i.grab||(i.grab=new E);for(const e of n)i.grab.load(e?.grab)}reset(){}}async function q(t,i=!0){await t.addInteractor("externalGrab",n=>new M(n),i)}export{q as l};
