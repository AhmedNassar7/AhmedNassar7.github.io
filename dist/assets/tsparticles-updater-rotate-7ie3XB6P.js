import{B as h,U as y,D as c,I as u}from"./tsparticles-engine-B56Pkamw.js";class b{constructor(){this.enable=!1,this.speed=0,this.decay=0,this.sync=!1}load(a){a&&(a.enable!==void 0&&(this.enable=a.enable),a.speed!==void 0&&(this.speed=h(a.speed)),a.decay!==void 0&&(this.decay=h(a.decay)),a.sync!==void 0&&(this.sync=a.sync))}}class w extends y{constructor(){super(),this.animation=new b,this.direction="clockwise",this.path=!1,this.value=0}load(a){a&&(super.load(a),a.direction!==void 0&&(this.direction=a.direction),this.animation.load(a.animation),a.path!==void 0&&(this.path=a.path))}}class f{constructor(a){this.container=a}init(a){const e=a.options.rotate;if(!e)return;a.rotate={enable:e.animation.enable,value:c(e.value)*Math.PI/180},a.pathRotation=e.path;let o=e.direction;switch(o==="random"&&(o=Math.floor(2*u())>0?"counter-clockwise":"clockwise"),o){case"counter-clockwise":case"counterClockwise":a.rotate.status="decreasing";break;case"clockwise":a.rotate.status="increasing"}const i=e.animation;i.enable&&(a.rotate.decay=1-c(i.decay),a.rotate.velocity=c(i.speed)/360*this.container.retina.reduceFactor,i.sync||(a.rotate.velocity*=u())),a.rotation=a.rotate.value}isEnabled(a){const e=a.options.rotate;return!!e&&!a.destroyed&&!a.spawning&&e.animation.enable&&!e.path}loadOptions(a,...e){a.rotate||(a.rotate=new w);for(const o of e)a.rotate.load(o==null?void 0:o.rotate)}update(a,e){var o;this.isEnabled(a)&&(function(i,p){const t=i.rotate,r=i.options.rotate;if(!t||!r)return;const v=r.animation,l=(t.velocity??0)*p.factor,s=2*Math.PI,d=t.decay??1;v.enable&&(t.status==="increasing"?(t.value+=l,t.value>s&&(t.value-=s)):(t.value-=l,t.value<0&&(t.value+=s)),t.velocity&&d!==1&&(t.velocity*=d))}(a,e),a.rotation=((o=a.rotate)==null?void 0:o.value)??0)}}async function k(n,a=!0){await n.addParticleUpdater("rotate",e=>new f(e),a)}export{k as l};
